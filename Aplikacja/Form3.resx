<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAoAAAAHgCAYAAAA10dzkAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAE1VJREFUeF7t3dFxItG1hlFlQiiEQihKYt4JhSAmAELhsqeqa3B7jy8IOD8clquW
        QZseP+zqan1qkPx1Op0AAPgg7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1QwAA5tUOAQCYVzsEAGBe
        7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1QwAA5tUOAQCYVzsE
        AGBe7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1QwAA5tUOAQCY
        VzsEAGBe7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1QwAA5tUO
        AQCYVzsEAGBe7RAAgHm1QwAA5tUOAQCYVzsEAGBe7RAAgHm1w1d2/k/9139ZHwcAQK8dvpPD4XDabrfn
        p/3rAAD8p3b4Tir+KgLXcwAAeu3wXRyPR3f/AABu1A7fxff392m/35+f9q8DALyqX1+/zw/9a8/WDt/F
        ZrM51V3A9RwA4NUJwB+o8KsAXM8BAN6BAPyBeut3t9udn/avX2v952QAAEapCFysG+WZ2uE7qPh7xOf/
        avnrGc9h1+PY9Rj2PI5dj2PX4yR33Q7fwaP+/IsTfRy7Hseux7Dncex6HLseJ7nrdvgOHvULIE70cex6
        HLsew57Hsetx7Hqc5K7b4Tt41NKSy/80dj2OXY9hz+PY9Th2PU5y1+3wkzjRAYAEARgkAAGABAEYJAAB
        gAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEY
        JAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGA
        BAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgk
        AAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAE
        ARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQA
        AYAEARgkAAGABAEYJAABgAQBeIPj8Xja7XanzWZz2m63p/1+fx73x15DAAIACQLwBhV9h8PhVCFYj8vX
        6+OuJQABgAQBeKW627e+47dE4OXsFgIQAEgQgFeq0Ks7f+v5PQQgAJAgAK9Un/u7/Axg8RlAAHicX1+/
        zw/9azyWALzS8osf39/ff0Kw3HtXUAACwF8CcBwBeKVaVMXf5aw+A7ie3SK5fAB4NQJwnGSDtMNXtbwF
        fDmrr2t+ObtFLX9tfQwAzKyi71/Wx/Jz694o62NGaYevqnu79xEBuJ4BwKcSfeMIwCvVW73rX/qor+uX
        Qi5ntxCAAPCXABxHAF5pudu3/OHn+rruCvpD0ADwGAJwHAF4gyX6lt8Ivif+igAEABIEYJAABAASBGCQ
        AAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAAS
        BGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAA
        BAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIE
        YJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAE
        ABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBGCQAAQAEgRg
        kAAEABIEYJAABAASBGCQAAQAEgRgkAAEABIEYJAABAASBOCVjsdjbau1PvZa9/xbAICfSjZIO3xVh8Ph
        tN1uz0/7139CAAIACQLwSvv9/vT9/X1+2r/+EwIQAEgQgFfa7XanisD1/B4CEABIEIBXqrd/KwLrsZZW
        j/W28Pq4WwhAgNf36+v3+aF/Dd6VALzSZrP58xZw/TJIfV2P90agAAR4fQKQGQnAO9z7iyECEOD1CUBm
        JADvsPxpmPX8WvVv19bHADBeRd+/rI+Fd7DujbI+ZpR2+E6Wt4HX82sllw/AdUQfMxKAV+o+71df3/On
        YQQgwOsTgMxIAF5p+bzfEoHL3b/ll0J+QgACvD4ByIwE4A0q/upPwdRvBHd3BG8lAAGABAEYJAABgAQB
        GCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAAB
        gAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEY
        JAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGA
        BAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgk
        AAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAEYJAABgAQBGCQAAYAE
        ARgkAAGABAEYJAABgAQBGCQAAYAEARgkAAGABAH4Q/v9vrZ3ftq/fg0BCAAkCMAfOB6Pp+12KwABgLck
        AH+g4q8iUAACAO9IAN5ot9ud6u3fen7v8pLLBwA+V7JB2uErq/CrAFy+vnd5yeUD7+3X1+/zQ/8awP8n
        2SDt8FUtn/u7nN27vOTygfcmAIF7JBukHb6q5XN/l7N7l5dcPvDeBCBwj2SDtMNXdPm5v0v3Lq/+/dr6
        GIBFRd+/rI8FuLTujbI+ZpR2+IrWC1tbH3+te/4t8NlEH3CPZIO0w3dy7/KSywfemwAE7pFskHb4Tu5d
        XnL5wHsTgMA9kg3SDt/JvctLLh8A+FzJBmmHn0QAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIA
        CQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBI
        AAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJ
        AjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgA
        AgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkC
        MEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAACAAkCMEgAAgAJAjBIAAIACQIwSAAC
        AAkC8AaHw+G03W5Pm83m9P39fR71x11LAAIACQLwSkv81ePxeDztdru7I1AAAgAJAvBKS/wtX1cE1p3A
        5eufEIAAQIIA/KGKQQEIALwjAfgDy9vB+/3+/GV/zDUEIDP69fX7/NC/BsBrEIA3qs/+1Z2/CsB6G3j9
        +i0EIDMSgACvTwD+0OUvhaxfu5YAZEYCEOD1CcA71FvAdUdwPb9WLX9tfQy8g4q+f1kfC8B4694o62NG
        aYfvpN4CvmeByeXDs4g+gNcnAK/Uvd27vA18ObuFAGRGAhDg9QnAKy2xt/ziRz36DCD8NwEI8PoE4A3q
        M38VfbW0e+OvCEAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglA
        ACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEA
        BglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAA
        IEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAG
        CUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAg
        QQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAAYJQAAgQQAGCUAAIEEABglAACBBAN7g
        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
        QmCC
</value>
  </data>
</root>